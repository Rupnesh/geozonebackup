{
  "name": "FalconServer",
  "version": "0.0.1",
  "main": "index.js",
  "author": {
    "name": "Geozone",
    "email": "alex.lazar@mcro-e.com"
  },
  "repository": "git@bitbucket.org:findmyteam/falconserver.git",
  "license": "ISC",
  "description": "FalconServer API and Websockets orchestration of the message queue coming from RassberryPI",
  "engines": {
    "node": "~6.10.1",
    "npm": "5.3.0"
  },
  "dependencies": {
    "JSONStream": "^1.3.1",
    "amqplib": "^0.5.1",
    "app-root-path": "^2.0.1",
    "async": "^2.5.0",
    "bcrypt": "^1.0.3",
    "bcrypt-nodejs": "0.0.3",
    "bluebird": "^3.5.0",
    "body-parser": "^1.18.2",
    "btoa": "^1.1.2",
    "chai": "^4.1.2",
    "concurrently": "^3.1.0",
    "cron": "^1.1.1",
    "crypto": "1.0.1",
    "express": "^4.15.5",
    "forever": "^0.15.3",
    "js-yaml": "^3.10.0",
    "jsonwebtoken": "^8.0.1",
    "mocha": "^3.1.0",
    "mysql": "^2.14.1",
    "mysql2": "^1.4.2",
    "nodemailer": "^4.1.1",
    "pg": "^7.3.0",
    "pg-hstore": "^2.3.2",
    "pgtools": "^0.3.0",
    "sequelize": "^4.11.1",
    "socket.io": "^2.4.0",
    "swagger-jsdoc": "^1.3.0",
    "validator": "^8.2.0",
    "walk-sync": "^0.3.2"
  },
  "devDependencies": {
    "babel-eslint": "^8.0.1",
    "better-npm-run": "0.1.0",
    "cross-env": "^5.0.5",
    "eslint": "4.7.1",
    "eslint-config-airbnb": "15.1.0",
    "eslint-config-airbnb-base": "12.0.0",
    "eslint-plugin-import": "2.7.0",
    "eslint-plugin-jsx-a11y": "6.0.2",
    "eslint-plugin-react": "7.3.0",
    "jsinspect": "^0.12.7",
    "nodemon": "^1.12.1"
  },
  "scripts": {
    "local": "better-npm-run start-local",
    "local-profiler": "better-npm-run start-local-profiler",
    "dev": "better-npm-run start-dev",
    "dev-profiler": "better-npm-run start-dev-profiler",
    "prod": "better-npm-run start-prod",
    "rprod": "better-npm-run restart-prod",
    "sprod": "better-npm-run start-sprod",
    "rsprod": "better-npm-run restart-sprod",
    "prod-profiler": "better-npm-run start-prod-profiler",
    "lint": "eslint -c .eslintrc src",
    "jsinspect": "jsinspect -t 30 -i ./src/endpoints ./src/models",
    "test": "mocha ./src/test/runner.js",
    "check": "npm run lint && npm run jsinspect && npm run test"
  },
  "betterScripts": {
    "start-local": {
      "command": "./node_modules/.bin/nodemon -V -e 'js,yml,json' ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "local"
      }
    },
    "start-local-profiling": {
      "command": "./node_modules/.bin/nodemon -V -e 'js,yml,json' ./src/index.js profiling",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "local"
      }
    },
    "start-dev": {
      "command": "forever ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "dev"
      }
    },
    "start-dev-profiling": {
      "command": "node ./src/index.js profiling",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "dev"
      }
    },
    "node-start-prod": {
      "command": "node ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "prod"
      }
    },
    "start-prod": {
      "command": "forever ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "prod"
      }
    },
    "start-sprod": {
      "command": "forever ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "sprod"
      }
    },
    "restart-prod": {
      "command": "forever restart ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "prod"
      }
    },
    "restart-sprod": {
      "command": "forever restart ./src/index.js",
      "env": {
        "NODE_PATH": "./src",
        "NODE_ENV": "sprod"
      }
    }
  }
}
